<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xb.dev.tools.mybatis.mapper.NewsMapper">

  <resultMap id="BaseResultMap" type="xb.dev.tools.mybatis.dao.entity.NewsEntity">
    <id column="news_id" jdbcType="VARCHAR" property="newsId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="browse_count" jdbcType="BIGINT" property="browseCount" />
    <result column="oppose_count" jdbcType="BIGINT" property="opposeCount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="support_count" jdbcType="BIGINT" property="supportCount" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="xb.dev.tools.mybatis.dao.entity.NewsEntity">
    <id column="news_id" jdbcType="VARCHAR" property="newsId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="browse_count" jdbcType="BIGINT" property="browseCount" />
    <result column="oppose_count" jdbcType="BIGINT" property="opposeCount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="support_count" jdbcType="BIGINT" property="supportCount" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
  </resultMap>

  <sql id="Base_Column_List">
    news_id, title, body, source, author, create_time, type, browse_count, oppose_count,
    status, support_count,delete_flag
  </sql>

  <!--  返回数据表当前最大id  -->
  <select id="queryMaxId" resultType="int">
        select  case  when  max(id) is null then 0 else max(id) end as m from t_news
  </select>

  <!-- 查询全部新闻，没有任何过滤条件    -->
  <select id="queryAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from xb_news
  </select>

  <!-- 根据id查询新闻    -->
  <select id="queryById" parameterType="int" resultMap="BaseResultMap2">
    select
    <include refid="Base_Column_List"></include>
    from xb_news
    where news_id = #{id,jdbcType=VARCHAR}
  </select>

  <!-- 通过新闻id删除新闻    -->
  <delete id="deleteById" parameterType="int">
    delete from xb_news
    where news_id = #{newsId,jdbcType = VARCHAR}
  </delete>

  <!-- 添加新闻，不过滤为空的字段    -->
  <insert id="insertNews" parameterType="xb.dev.tools.mybatis.dao.entity.NewsEntity">
    insert into t_news (
      id,
      news_id,
      title,
      body,
      source,
      author,
      create_time,
      type,
      browse_count,
      oppose_count,
      status,
      support_count,
      delete_flag,
      user_id)
    values (
      #{id,jdbcType=INTEGER},
      #{newsId,jdbcType=VARCHAR},
      #{title,jdbcType=VARCHAR},
      #{body,jdbcType=VARCHAR},
      #{source,jdbcType=VARCHAR},
      #{author,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{type,jdbcType=VARCHAR},
      #{browseCount,jdbcType=BIGINT},
      #{opposeCount,jdbcType=BIGINT},
      #{status,jdbcType=TINYINT},
      #{supportCount,jdbcType=BIGINT},
      #{deleteFlag,jdbcType=TINYINT},
      #{userId,jdbcType=INTEGER})
  </insert>

  <!-- 查询新闻总数，没有任何过滤条件    -->
  <select id="countAll" resultType="java.lang.Long">
    select count(1) from xb_news
  </select>

  <!-- 修改新闻，为空的字段不参与修改    -->
  <update id="updateCommonById" parameterType="xb.dev.tools.mybatis.dao.entity.NewsEntity">
    update xb_news
    <set>
      <if test="record.newsId != null">
        news_id = #{record.newsId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.browseCount != null">
        browse_count = #{record.browseCount,jdbcType=BIGINT},
      </if>
      <if test="record.opposeCount != null">
        oppose_count = #{record.opposeCount,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.supportCount != null">
        support_count = #{record.supportCount,jdbcType=BIGINT},
      </if>
    </set>
    where
    id = #{id}
  </update>

  <!--   逻辑删除新闻  -->
  <update id="deleteNewsById" parameterType="map">
    update xb_news set delete_flag = #{deleteFlag,jdbcType=BIT} where news_id = #{newsId,jdbcType=VARCHAR}
  </update>

</mapper>